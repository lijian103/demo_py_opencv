import numpy as np
from matplotlib import pyplot as plt
import cv2

Image_rows = 1140
Image_cols = 912

freq_1 = 1 / 70
freq_2 = 1 / 64
freq_3 = 1 / 59

waveLength_1 = Image_cols * freq_1
waveLength_2 = Image_cols * freq_2
waveLength_3 = Image_cols * freq_3

waveLength_12 = (waveLength_1 * waveLength_2) / (waveLength_2 - waveLength_1)

initial_phase = 0
Period = 5
x_axis_cos = np.linspace(initial_phase, 2 * np.pi * Period + initial_phase, Image_cols)
y_axis1_1 = 90 * np.cos(x_axis_cos) + 120
plt.figure("cos_wave" + "_initial_phase_" + str(initial_phase) + "_Period_" + str(Period))
plt.plot(x_axis_cos, y_axis1_1)

initial_phase = -2*np.pi/3
Period = 5
x_axis_cos = np.linspace(initial_phase, 2 * np.pi * Period + initial_phase, Image_cols)
y_axis1_0 = 90 * np.cos(x_axis_cos) + 120
plt.figure("cos_wave" + "_initial_phase_" + str(initial_phase) + "_Period_" + str(Period))
plt.plot(x_axis_cos, y_axis1_0)

initial_phase = 2*np.pi/3
Period = 5
x_axis_cos = np.linspace(initial_phase, 2 * np.pi * Period + initial_phase, Image_cols)
y_axis1_2 = 90 * np.cos(x_axis_cos) + 120
plt.figure("cos_wave" + "_initial_phase_" + str(initial_phase) + "_Period_" + str(Period))
plt.plot(x_axis_cos, y_axis1_2)

wraped_phase= np.arctan2(3**0.5*(y_axis1_0-y_axis1_2),(2*y_axis1_1-(y_axis1_0+y_axis1_2)))
plt.figure("wraped_phase")
initial_phase = 0
Period = 5
x_axis_cos = np.arange(initial_phase,  Image_cols,1)
plt.plot(x_axis_cos, wraped_phase)

plt.plot(x_axis_cos,np.unwrap(wraped_phase)) ## plt.plot(x_axis_cos,np.unwrap(2*wraped_phase)/2)

initial_phase = 0
Period = 5
def getWrapedPhase(imagePath ="./cos_pictures/" ,Period = 70) :
    initial_phase= [-2*np.pi/3,0,2*np.pi/3]
    imagePathList=[]
    grayImages = []
    for each in range(3):
        imagePathList.append(imagePath + "cos_wave" + "_Period_" + str(Period) + "_initial_phase_" + str(
        initial_phase[each]) + ".bmp")
        print(imagePathList[each])
        img = cv2.imread(imagePathList[each])
        img = np.asarray(img, dtype="float32")
        # cv2.imshow(str(each),img)
        grayImages.append(cv2.cvtColor(img, cv2.COLOR_BGR2GRAY))
    return grayImages

grayImages=getWrapedPhase(imagePath ="./cos_pictures/" ,Period = 64)
WrapedPhase = np.zeros((Image_rows, Image_cols), dtype="float32")
# for i in range(Image_rows):
#     for j in range(Image_cols):
#         WrapedPhase[i][j] =np.arctan2(3 ** 0.5 * (grayImages[0][i][j] - grayImages[2][i][j]), (
#                     2 * grayImages[1][i][j] - (grayImages[0][i][j] + grayImages[2][i][j])))
WrapedPhase =np.arctan2(3 ** 0.5 * (grayImages[0] - grayImages[2]),(2 * grayImages[1] - (grayImages[0] + grayImages[2])))
plt.figure("test")
y_axis= WrapedPhase[0:1,:]
plt.plot(x_axis_cos, y_axis.reshape(912))
plt.plot(x_axis_cos,np.unwrap(y_axis.reshape(912))) ## plt.plot(x_axis_cos,np.unwrap(2*wraped_phase)/2)

